name: Frontend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'frontend/**'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run linter
      run: |
        cd frontend
        npm run lint
    
    - name: Run unit tests
      run: |
        cd frontend
        npm run test:run
    
    - name: Run unit tests with coverage
      run: |
        cd frontend
        npm run test:coverage

  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Install Playwright Browsers
      run: |
        cd frontend
        npx playwright install --with-deps
    
    - name: Build application
      run: |
        cd frontend
        # Create a test env.js file before building
        echo 'window.env = { REACT_APP_ENV: "test", REACT_APP_API_BASE_URL: "http://localhost:8081" };' > public/env.js
        npm run build
    
    - name: Run build verification tests
      run: |
        cd frontend
        echo "Running build verification tests..."
        npm run test:run -- tests/build-verification.test.js
    
    - name: Run E2E tests
      run: |
        cd frontend
        echo "Starting E2E tests..."
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Playwright version: $(npx playwright --version)"
        
        # Start vite preview server to serve the built application
        npm run preview &
        SERVER_PID=$!
        
        # Function to cleanup on exit
        cleanup() {
          echo "Cleaning up server..."
          kill $SERVER_PID 2>/dev/null || true
        }
        trap cleanup EXIT
        
        # Wait for server to start and verify it's running
        echo "Waiting for server to start..."
        for i in {1..30}; do
          if curl -s http://localhost:4173 > /dev/null; then
            echo "Server is running!"
            break
          fi
          if [ $i -eq 30 ]; then
            echo "Server failed to start after 30 seconds"
            exit 1
          fi
          sleep 1
        done
        
        # Run the E2E tests with the custom config
        echo "Running E2E tests..."
        BASE_URL=http://localhost:4173 npx playwright test --config=playwright.config.ci.js tests/e2e/basic.spec.js
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30

  all-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    
    steps:
    - name: All tests passed
      run: echo "âœ… All frontend tests passed successfully!"
